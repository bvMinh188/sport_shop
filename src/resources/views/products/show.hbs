<body>
    <div class="container mt-5">
        <div class="product-container">
        <div class="row">
            <div class="col-md-6">
                    <img src="{{product.image}}" alt="{{product.name}}" class="img-fluid product-image" width="400px" height="auto">
            </div>
            <div class="col-md-6">
                    <h2 class="product-title">{{product.name}}</h2>
                    <span class="product-price">{{formatPrince product.price}}</span>
                    <div class="add-to-cart">
                    <form id="addOrder">
                        <input type="hidden" id="size" name="size">
                        <div class="size-options">
                                <label class="d-block mb-2 fw-500">Chọn Size:</label>
                            {{#each product.sizes}}
                                <button type="button" class="btn btn-outline-dark size-btn" 
                                    onclick="handleSizeClick({{this.size}}, {{this.quantity}})"
                                    data-size="{{this.size}}" 
                                    data-quantity="{{this.quantity}}"
                                    {{#if (eq this.quantity 0)}}disabled{{/if}}>
                                    {{this.size}}
                                </button>
                            {{/each}}
                        </div>

                            <div class="quantity-container">
                                <label for="quantity">Số Lượng:</label>
                            <div class="d-flex align-items-center">
                                    <input type="number" id="quantity" name="quantity" value="1" min="1" class="form-control quantity-input">
                                    <span class="ms-3 available-quantity" id="valueSize"></span>
                            </div>
                        </div>

                            <button type="submit" class="btn btn-success add-to-cart-btn">
                                <i class="fas fa-shopping-cart me-2"></i>Thêm vào giỏ hàng
                            </button>
                    </form>
                </div>
            </div>
        </div>
    </div>

        <div class="product-description">
        <h4>MÔ TẢ SẢN PHẨM</h4>
        <p>{{product.description}}</p>
    </div>

        <!-- Message Container -->
        <div class="message-container">
            <div class="message"></div>
    </div>

    <div class="related-products">
    <h3>SẢN PHẨM TƯƠNG TỰ</h3>
    <div class="row">
        {{#each products}}
                <div class="col-6 col-md-4 col-lg-2 product-item mb-4">
            <div class="card card-product-item">
                <a href="/{{this.slug}}">
                    <img src="{{this.image}}" class="image-container" alt="{{this.name}}">
                </a>
                <div class="card-body">
                            <a href="/{{this.slug}}" class="text-decoration-none">
                        <h5 class="card-title">{{this.name}}</h5>
                    </a>
                            <p class="product-price mb-0">{{formatPrince this.price}}</p>
                </div>
            </div>
        </div>
        {{/each}}
    </div>
</div>
    </div>
</body>

<style>
    #toastContainer {
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        z-index: 9999;
        visibility: hidden;
        opacity: 0;
        transition: all 0.3s ease;
        min-width: 250px;
        text-align: center;
    }

    #toastMessage {
        padding: 12px 20px;
        border-radius: 8px;
        font-size: 14px;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 8px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.15);
        color: white;
        font-weight: 500;
    }

    .toast-icon {
        font-size: 16px;
    }

    @keyframes fadeIn {
        from {
            opacity: 0;
            transform: translate(-50%, calc(-50% + 20px));
        }
        to {
            opacity: 1;
            transform: translate(-50%, -50%);
        }
    }

    @keyframes fadeOut {
        from {
            opacity: 1;
            transform: translate(-50%, -50%);
        }
        to {
            opacity: 0;
            transform: translate(-50%, calc(-50% - 20px));
        }
    }

    #toastContainer.show {
        visibility: visible;
        opacity: 1;
        animation: fadeIn 0.3s ease forwards;
    }

    #toastContainer.hide {
        animation: fadeOut 0.3s ease forwards;
    }

    /* Thêm style cho các phần khác */
    .product-title {
        font-size: 24px;
        margin-bottom: 15px;
    }

    .product-price {
        font-size: 20px;
        color: #dc3545;
        font-weight: bold;
        display: block;
        margin-bottom: 20px;
    }

    .size-options {
        margin-bottom: 20px;
    }

    .size-btn {
        margin-right: 10px;
        min-width: 50px;
    }

    .size-btn.active {
        background-color: #343a40;
        color: white;
    }

    .quantity-container {
        margin-bottom: 20px;
    }

    .quantity-input {
        max-width: 100px;
    }

    .available-quantity {
        color: #6c757d;
    }

    .add-to-cart-btn {
        width: 100%;
        padding: 12px;
        font-size: 16px;
    }

    .product-description {
        margin: 40px 0;
    }

    .product-description h4 {
        margin-bottom: 20px;
    }

    .related-products {
        margin-top: 40px;
    }

    .related-products h3 {
        margin-bottom: 20px;
    }

    .card-product-item {
        transition: transform 0.2s;
    }

    .card-product-item:hover {
        transform: translateY(-5px);
    }

    .image-container {
        height: 200px;
        object-fit: cover;
    }

    .message-container {
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        z-index: 9999;
        visibility: hidden;
        opacity: 0;
        transition: all 0.3s ease;
        min-width: 250px;
        text-align: center;
    }

    .message {
        padding: 12px 20px;
        border-radius: 8px;
        font-size: 14px;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 8px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.15);
        color: white;
        font-weight: 500;
    }

    .message.success {
        background-color: rgba(40, 167, 69, 0.95);
    }

    .message.error {
        background-color: rgba(220, 53, 69, 0.95);
    }

    @keyframes fadeIn {
        from {
            opacity: 0;
            transform: translate(-50%, calc(-50% + 20px));
        }
        to {
            opacity: 1;
            transform: translate(-50%, -50%);
        }
    }

    @keyframes fadeOut {
        from {
            opacity: 1;
            transform: translate(-50%, -50%);
        }
        to {
            opacity: 0;
            transform: translate(-50%, calc(-50% - 20px));
        }
    }

    .message-container.show {
        visibility: visible;
        opacity: 1;
        animation: fadeIn 0.3s ease forwards;
    }

    .message-container.hide {
        animation: fadeOut 0.3s ease forwards;
    }
</style>

<script>
    $(document).ready(function() {
        // Highlight selected size button
        $('.size-btn').click(function() {
            $('.size-btn').removeClass('active');
            $(this).addClass('active');
        });

        function showToast(message, type = "success") {
            const toast = $("#toastContainer");
            const toastMessage = $("#toastMessage");
            const icon = type === "success" ? "check-circle" : "exclamation-circle";

            toastMessage.html(`
                <i class="fas fa-${icon}"></i>
                <span>${message}</span>
            `);
            
            toastMessage.css({
                "background-color": type === "success" ? "rgba(40, 167, 69, 0.95)" : "rgba(220, 53, 69, 0.95)"
            });

            toast.css({
                "visibility": "visible"
            }).removeClass('hide').addClass('show');

            setTimeout(() => {
                toast.removeClass('show').addClass('hide');
                setTimeout(() => {
                    toast.css("visibility", "hidden");
                }, 300);
            }, 2000);
        }

        function showMessage(message, type = 'success') {
            const messageContainer = $('.message-container');
            const messageElement = $('.message');

            // Thêm icon cho message
            const icon = type === 'success' ? 'check-circle' : 'exclamation-circle';
            messageElement.html(`
                <i class="fas fa-${icon}"></i>
                <span>${message}</span>
            `);
            
            messageElement.removeClass('success error').addClass(type);
            messageContainer.removeClass('hide').addClass('show');
            
            setTimeout(() => {
                messageContainer.removeClass('show').addClass('hide');
            }, 2000);
        }

        $("#addOrder").submit(function(event) {
        event.preventDefault();

        const size = $("#size").val();
        const quantity = $("#quantity").val();
        const idProduct = "{{product._id}}";

        if (!size) {
                showMessage("Vui lòng chọn size trước khi thêm vào giỏ hàng!", "error");
            return;
        }

        $.ajax({
            url: `/cart/add/${idProduct}`,
            method: "POST",
            data: { size: size, quantity: quantity },
            success: function(response) {
                    showMessage(response.message, "success");
                if (response.message === 'Thêm thành công' || response.message === 'Cập nhật giỏ hàng thành công') {
                        setTimeout(() => window.location.reload(), 2000);
                }
            },
            error: function(xhr) {
                if (xhr.responseJSON && xhr.responseJSON.message) {
                        showMessage(xhr.responseJSON.message, "error");
                } else {
                        showMessage("Đã xảy ra lỗi. Vui lòng thử lại sau.", "error");
                    }
                }
        });
    });

        $("#quantity").on("input", function() {
        const max = $(this).attr("max");
        let val = parseInt($(this).val());

        if (val > max) {
            $(this).val(max);
        } else if (val < 1 || isNaN(val)) {
            $(this).val(1);
        }
    });
});

    function handleSizeClick(size, quantity) {
        document.getElementById("valueSize").innerText = `Còn lại: ${quantity} sản phẩm`;
        document.getElementById("size").value = size;

        const quantityInput = document.getElementById("quantity");
        quantityInput.max = quantity;
        quantityInput.value = 1;
    }
</script>